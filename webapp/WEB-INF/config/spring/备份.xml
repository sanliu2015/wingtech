<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
                               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                               http://www.springframework.org/schema/context
                               http://www.springframework.org/schema/context/spring-context-4.0.xsd
                               http://www.springframework.org/schema/aop
                               http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                               http://www.springframework.org/schema/tx
                               http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="parentDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver" />
		<property name="url"
			value="jdbc:jtds:sqlserver://192.168.1.12:1618/wingtech_dev" />
		<property name="username" value="sa" />
		<property name="password" value="!tgp2008" />
	</bean>


	<!-- 数据源 -->
	<bean id="adminDataSource" parent="parentDataSource">
		<property name="url"
			value="jdbc:jtds:sqlserver://192.168.1.12:1618/wingtech_dev" />
		<property name="username" value="sa" />
		<property name="password" value="!tgp2008" />
	</bean>

	<!-- 数据源 -->
	<bean id="userDataSource" parent="parentDataSource">
		<property name="url"
			value="jdbc:jtds:sqlserver://192.168.1.12:1618/wingtech_dev" />
		<property name="username" value="sa" />
		<property name="password" value="!tgp2008" />
	</bean>
	<!-- 编写spring 配置文件的配置多数源映射关系 -->
	<bean id="dataSource" class="test.spring.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="Admin" value-ref="adminDataSource"></entry>
				<entry key="User" value-ref="userDataSource"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="userDataSource">
		</property>
	</bean>
	<!-- 配置sessionFactory，统一管理一个数据库的连接 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.ts.**" />
		<!-- <property name="mappingDirectoryLocations"> <list> <value>classpath:../config/hibernate/com</value> 
			</list> </property> -->
		<property name="configLocation"
			value="classpath:../config/hibernate/hibernate.cfg.xml" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 配置Hibernate事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>

			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="convert*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED" />
			<tx:method name="audit*" propagation="REQUIRED" />
			<tx:method name="cancelAudit*" propagation="REQUIRED" />
			<tx:method name="print*" propagation="REQUIRED" />
			<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" read-only="true" />
			<tx:method name="edit*" propagation="REQUIRED" read-only="true" />
			<tx:method name="lookup*" propagation="REQUIRED" read-only="true" />
			<tx:method name="view*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
		<aop:pointcut id="txSerivcePointcut"
			expression="execution(* com.ts..*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txSerivcePointcut" />
	</aop:config>
	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate"
		p:sessionFactory-ref="sessionFactory" />
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
	<bean id="namedParamJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<!--<bean id="dbService" class="com.ts.core.db.DbService" /> -->
	<!-- ******************************************activity配置******************************************* -->
	<!-- 创建一个流程引擎的配置对象 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="txManager" />
		<!-- 设置数据库schema的更新方式 -->
		<property name="databaseSchemaUpdate" value="true" />
		<!-- 是否启动jobExecutor -->
		<property name="jobExecutorActivate" value="true" />
		<property name="history" value="full" />
		<property name="processDefinitionCacheLimit" value="10" />
		<property name="activityFontName" value="微软雅黑" />
		<property name="labelFontName" value="微软雅黑" />
	</bean>
	<!-- 创建一个流程引擎bean -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	<!-- 创建activiti提供的各种服务 -->
	<!-- 工作流仓储服务 -->
	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<!-- 工作流运行服务 -->
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<!-- 工作流表单服务 -->
	<bean id="formService" factory-bean="processEngine"
		factory-method="getFormService" />
	<!-- 工作流唯一服务 -->
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService" />
	<!-- 工作流任务服务 -->
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<!-- 工作流历史数据服务 -->
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<!-- 工作流管理服务 -->
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />


	<aop:config>
		<aop:pointcut id="baseBeforePointcut"
			expression="execution(* com.ts..*ServiceImpl.*(..))" />
		<aop:aspect ref="baseAOPService">
			<aop:before pointcut-ref="baseBeforePointcut" method="beforeAdvice" />
			<aop:after-returning pointcut="execution(* com.ts..*ServiceImpl.*(..))"
				method="afterAdvice" returning="retValue" arg-names="joinPoint,retValue" />
		</aop:aspect>
	</aop:config>
</beans>